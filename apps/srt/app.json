{
"Pos": {
"X": 0,
"Y": 0
},
"Name": "root",
"Exe": "layout",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"grid_h": 0,
"grid_w": 0,
"grid_x": 0,
"grid_y": 0,
"show": true
},
"Cols": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 100,
"Resize": 1
}
],
"Rows": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 3,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 1,
"Resize": 1
},
{
"Pos": 3,
"Min": 1,
"Max": 1,
"Resize": 1
},
{
"Pos": 4,
"Min": 1,
"Max": 100,
"Resize": 1
}
],
"Subs": [
{
"Pos": {
"X": 7.330115,
"Y": 2.6991634
},
"Name": "func_go",
"Exe": "func_go",
"Selected": true,
"Code": {
"Triggers": [
"button"
],
"Messages": [
{
"User": "If 'button' is clicked, use 'whispercpp' to translate all .wav files in 'disk_dir'.\nSave translations as files with same name + \".srt\".",
"Assistent": "```go\nimport (\n\t\"io/ioutil\"\n\t\"path/filepath\"\n\t\"strings\"\n)\n\nfunc func_go(button *Button, whispercpp *Whispercpp, disk_dir *Disk_dir) error {\n\tif !button.Clicked {\n\t\treturn nil\n\t}\n\n\tfiles, err := ioutil.ReadDir(disk_dir.Path)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfor _, file := range files {\n\t\tif filepath.Ext(file.Name()) == \".wav\" {\n\t\t\taudioData, err := ioutil.ReadFile(filepath.Join(disk_dir.Path, file.Name()))\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\ttranslation, err := whispercpp.TranscribeBlob(audioData)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tsrtFileName := strings.TrimSuffix(file.Name(), filepath.Ext(file.Name())) + \".srt\"\n\t\t\terr = ioutil.WriteFile(filepath.Join(disk_dir.Path, srtFileName), []byte(translation), 0644)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}\n```"
},
{
"User": "",
"Assistent": ""
}
],
"Code": "\nimport (\n\t\"io/ioutil\"\n\t\"path/filepath\"\n\t\"strings\"\n)\n\nfunc func_go(button *Button, whispercpp *Whispercpp, disk_dir *Disk_dir) error {\n\tif !button.Clicked {\n\t\treturn nil\n\t}\n\n\tfiles, err := ioutil.ReadDir(disk_dir.Path)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tfor _, file := range files {\n\t\tif filepath.Ext(file.Name()) == \".wav\" {\n\t\t\taudioData, err := ioutil.ReadFile(filepath.Join(disk_dir.Path, file.Name()))\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\ttranslation, err := whispercpp.TranscribeBlob(audioData)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tsrtFileName := strings.TrimSuffix(file.Name(), filepath.Ext(file.Name())) + \".srt\"\n\t\t\terr = ioutil.WriteFile(filepath.Join(disk_dir.Path, srtFileName), []byte(translation), 0644)\n\t\t\tif err != nil {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}\n"
},
"Attrs": {
"bypass": false,
"show": true
},
"ShowCodeChat": true
},
{
"Pos": {
"X": 7.4682527,
"Y": -0.46600184
},
"Name": "whispercpp",
"Exe": "whispercpp",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"beam_size": -1,
"best_of": 2,
"detect_language": false,
"diarize": false,
"duration": 0,
"entropy_thold": 2.4,
"language": "",
"logprob_thold": -1,
"max_context": -1,
"max_len": 0,
"model": "ggml-tiny",
"no_timestamps": false,
"offset_n": 0,
"offset_t": 0,
"response_format": "srt",
"show": true,
"split_on_word": false,
"temperature": 0,
"temperature_inc": 0.2,
"tinydiarize": false,
"translate": false,
"word_thold": 0.01
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 1.0599223,
"Y": 4.1333284
},
"Name": "button",
"Exe": "button",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"clicked": true,
"confirmation": "",
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 3,
"label": "Transcribe",
"show": true,
"tooltip": ""
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 0.80622154,
"Y": 0.99445987
},
"Name": "disk_dir",
"Exe": "disk_dir",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 1,
"path": "./tracks/",
"show": true,
"write": false
},
"ShowCodeChat": false
}
],
"ShowCodeChat": false
}