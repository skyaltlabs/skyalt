{
"Pos": {
"X": 0,
"Y": 0
},
"Name": "root",
"Exe": "layout",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"grid_h": 0,
"grid_w": 0,
"grid_x": 0,
"grid_y": 0,
"show": true
},
"Cols": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 10,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 100,
"Resize": 1
}
],
"Rows": [
{
"Pos": 0,
"Min": 1,
"Max": 1,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 1,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 11,
"Resize": 1
}
],
"Subs": [
{
"Pos": {
"X": 7.4053073,
"Y": 5.6536984
},
"Name": "update_table",
"Exe": "code",
"Code": {
"Messages": [
{
"User": "Go through 'table' and check if model + \".bin\" exist in 'dir'.\nIf it exists, set button label to \"Delete\", else \"Download\".\nIf \"Delete\" is clicked, delete the file, else download it from 'net' with address(model + \".bin)\" and save it into 'dir'.",
"Assistent": "```go\nimport (\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc table_button(table *ListTable, dir *Disk_dir, net *Net) error {\n\tfor _, row := range table.Rows {\n\t\tfilePath := filepath.Join(dir.Path, row.Model.Label+\".bin\")\n\t\t_, err := os.Stat(filePath)\n\t\tif err == nil {\n\t\t\trow.Button.Label = \"Delete\"\n\t\t\tif row.Button.Triggered \u0026\u0026 dir.Write {\n\t\t\t\tos.Remove(filePath)\n\t\t\t}\n\t\t} else {\n\t\t\trow.Button.Label = \"Download\"\n\t\t\tif row.Button.Triggered {\n\t\t\t\tnet.DownloadFile(filePath, row.Model.Label+\".bin\")\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n```"
},
{
"User": "",
"Assistent": ""
}
],
"Code": "\nimport (\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc update_table(table *ListTable, dir *Disk_dir, net *Net) error {\n\tfor _, row := range table.Rows {\n\t\tfilePath := filepath.Join(dir.Path, row.Model.Label+\".bin\")\n\t\t_, err := os.Stat(filePath)\n\t\tif err == nil {\n\t\t\trow.Button.Label = \"Delete\"\n\t\t\tif row.Button.Triggered \u0026\u0026 dir.Write {\n\t\t\t\tos.Remove(filePath)\n\t\t\t}\n\t\t} else {\n\t\t\trow.Button.Label = \"Download\"\n\t\t\tif row.Button.Triggered {\n\t\t\t\tnet.DownloadFile(filePath, row.Model.Label+\".bin\")\n\t\t\t}\n\t\t}\n\t}\n\treturn nil\n}\n",
"ArgsProps": [
{
"Node": "table",
"Write": true
},
{
"Node": "dir",
"Write": false
},
{
"Node": "net",
"Write": false
}
]
},
"Attrs": {
"bypass": false,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"language": "go",
"show": true
},
"ShowCodeChat": true
},
{
"Pos": {
"X": 4.645752,
"Y": 1.8210002
},
"Name": "table",
"Exe": "list",
"Code": {
"Messages": [
{
"User": "Clear 'table' and copy table \"Link\" from 'db' into 'table'.\nSet \"size\" column as \u003cvalue\u003e+\"MB\".",
"Assistent": "```go\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/mattn/go-sqlite3\"\n)\n\nfunc table(table *ListTable, db *Tables) error {\n\tconn, err := sql.Open(\"sqlite3\", db.Path)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer conn.Close()\n\n\trows, err := conn.Query(\"SELECT model, size FROM links\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar model string\n\t\tvar size int\n\t\t\n\t\terr = rows.Scan(\u0026model, \u0026size)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\trow := table.AddRow()\n\t\trow.Model.Label = model\n\t\trow.Size.Label = fmt.Sprintf(\"%dMB\", size)\n\t}\n\n\treturn nil\n}\n```"
},
{
"User": "",
"Assistent": ""
}
],
"Code": "\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/mattn/go-sqlite3\"\n)\n\nfunc table(table *ListTable, db *Tables) error {\n\tconn, err := sql.Open(\"sqlite3\", db.Path)\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer conn.Close()\n\n\trows, err := conn.Query(\"SELECT model, size FROM links\")\n\tif err != nil {\n\t\treturn err\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar model string\n\t\tvar size int\n\t\t\n\t\terr = rows.Scan(\u0026model, \u0026size)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\trow := table.AddRow()\n\t\trow.Model.Label = model\n\t\trow.Size.Label = fmt.Sprintf(\"%dMB\", size)\n\t}\n\n\treturn nil\n}\n",
"ArgsProps": [
{
"Node": "db",
"Write": false
}
]
},
"Attrs": {
"changed": false,
"defRow": {
"button": {
"background": 1,
"confirmation": "Are you sure?",
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 2,
"grid_y": 0,
"label": "button",
"show": true,
"tooltip": "",
"triggered": false
},
"model": {
"align_h": 0,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"label": "name",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"size": {
"align_h": 0,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 0,
"label": "size",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
}
},
"direction": 0,
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 2,
"max_height": 1,
"max_width": 100,
"show": true,
"show_border": true
},
"Cols": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 3,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 4,
"Resize": 1
}
],
"Rows": [
{
"Pos": 0,
"Min": 1,
"Max": 1,
"Resize": 1
}
],
"Subs": [
{
"Pos": {
"X": 3.620442,
"Y": 1.1823252
},
"Name": "model",
"Exe": "text",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"align_h": 0,
"align_v": 1,
"changed": false,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"label": "name",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 12.546331,
"Y": 1.2252256
},
"Name": "button",
"Exe": "button",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"background": 1,
"confirmation": "Are you sure?",
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 2,
"grid_y": 0,
"label": "button",
"show": true,
"tooltip": "",
"triggered": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 8.060343,
"Y": 1.2251307
},
"Name": "size",
"Exe": "text",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"align_h": 0,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 0,
"label": "size",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"ShowCodeChat": false
}
],
"ShowCodeChat": true
},
{
"Pos": {
"X": -3.9028304,
"Y": 7.011476
},
"Name": "net",
"Exe": "net",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"file_path": "",
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"node": "",
"show": true,
"url": "https://huggingface.co/ggerganov/whisper.cpp/resolve/main/"
},
"ShowCodeChat": false
},
{
"Pos": {
"X": -4.028314,
"Y": 3.986488
},
"Name": "dir",
"Exe": "disk_dir",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"enable": false,
"grid_h": 0,
"grid_w": 0,
"grid_x": 0,
"grid_y": 0,
"path": "services/whisper.cpp/models/",
"show": false,
"write": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": -3.9849472,
"Y": 0.6965537
},
"Name": "db",
"Exe": "tables",
"Code": {
"Messages": null,
"Code": "",
"ArgsProps": null
},
"Attrs": {
"enable": true,
"grid_h": 6,
"grid_w": 12,
"grid_x": 0,
"grid_y": 11,
"init_sql": "CREATE TABLE IF NOT EXISTS links (url TEXT);\nCREATE TABLE IF NOT EXISTS abc (firstColumn TEXT);\n",
"path": "apps/download_whisper_models/db.sqlite",
"selected_table": "links",
"show": false,
"show_path": true,
"show_table_list": true,
"write": false
},
"ShowCodeChat": false
}
],
"ShowCodeChat": false
}