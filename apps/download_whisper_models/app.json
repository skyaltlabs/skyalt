{
"Pos": {
"X": 0,
"Y": 0
},
"Name": "root",
"Exe": "layout",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"grid_h": 0,
"grid_w": 0,
"grid_x": 0,
"grid_y": 0,
"show": true
},
"Cols": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 10,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 100,
"Resize": 1
}
],
"Rows": [
{
"Pos": 1,
"Min": 1,
"Max": 1,
"Resize": 1
},
{
"Pos": 2,
"Min": 1,
"Max": 10,
"Resize": 1
}
],
"Subs": [
{
"Pos": {
"X": -4.0705986,
"Y": 1.7078441
},
"Name": "title2",
"Exe": "text",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"align_h": 1,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 4,
"label": "Directory",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": -4.055361,
"Y": 0.046762347
},
"Name": "title",
"Exe": "text",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"align_h": 1,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 1,
"label": "**Whisper models**",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 3.3160646,
"Y": 7.283033
},
"Name": "table_button",
"Exe": "func_go",
"Code": {
"Triggers": [
"table",
"dir"
],
"Messages": [
{
"User": "Go through 'table' and check if model + \".bin\" exist in 'dir'.\nIf it exists, set label to \"Delete\", else \"Download\".\nIf \"Delete\" is clicked, delete the file, else download it from 'net' + model + \".bin\" and save it into 'dir'.",
"Assistent": "```go\nimport (\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc table_button(table *CopyTable, dir *Disk_dir, net *Net) error {\n\tfor _, row := range table.Rows {\n\t\tfilePath := filepath.Join(dir.Path, row.Model.Label+\".bin\")\n\t\tif _, err := os.Stat(filePath); err == nil {\n\t\t\trow.Button.Label = \"Delete\"\n\t\t\tif row.Button.Clicked \u0026\u0026 dir.Write {\n\t\t\t\terr := os.Remove(filePath)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\trow.Button.Label = \"Download\"\n\t\t\tif row.Button.Clicked {\n\t\t\t\terr := net.DownloadFile(filePath, row.Model.Label+\".bin\")\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trow.Button.Clicked = false\n\t}\n\treturn nil\n}\n```"
},
{
"User": "",
"Assistent": ""
}
],
"Code": "\nimport (\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc table_button(table *CopyTable, dir *Disk_dir, net *Net) error {\n\tfor _, row := range table.Rows {\n\t\tfilePath := filepath.Join(dir.Path, row.Model.Label+\".bin\")\n\t\tif _, err := os.Stat(filePath); err == nil {\n\t\t\trow.Button.Label = \"Delete\"\n\t\t\tif row.Button.Clicked \u0026\u0026 dir.Write {\n\t\t\t\terr := os.Remove(filePath)\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\trow.Button.Label = \"Download\"\n\t\t\tif row.Button.Clicked {\n\t\t\t\terr := net.DownloadFile(filePath, row.Model.Label+\".bin\")\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trow.Button.Clicked = false\n\t}\n\treturn nil\n}\n"
},
"Attrs": {
"bypass": false,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"show": true
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 3.380416,
"Y": -3.2060273
},
"Name": "buildTable",
"Exe": "func_go",
"Code": {
"Triggers": [
"db"
],
"Messages": [
{
"User": "Clear 'table' and copy table \"Link\" from 'db' into 'table'.",
"Assistent": "```go\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/mattn/go-sqlite3\"\n)\n\nfunc buildTable(table *CopyTable, db *Tables) error {\n\ttable.ClearRows()\n\n\tdatabase, err := sql.Open(\"sqlite3\", db.Path)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"opening database: %w\", err)\n\t}\n\tdefer database.Close()\n\n\trows, err := database.Query(\"SELECT model FROM links\")\n\tif err != nil {\n\t\treturn fmt.Errorf(\"querying database: %w\", err)\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar model string\n\t\tif err = rows.Scan(\u0026model); err != nil {\n\t\t\treturn fmt.Errorf(\"scanning row: %w\", err)\n\t\t}\n\n\t\tnewRow := table.AddRow()\n\t\tnewRow.Model.Label = model\n\t}\n\n\tif err = rows.Err(); err != nil {\n\t\treturn fmt.Errorf(\"iterating over rows: %w\", err)\n\t}\n\n\treturn nil\n}\n```"
},
{
"User": "",
"Assistent": ""
}
],
"Code": "\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/mattn/go-sqlite3\"\n)\n\nfunc buildTable(table *CopyTable, db *Tables) error {\n\ttable.ClearRows()\n\n\tdatabase, err := sql.Open(\"sqlite3\", db.Path)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"opening database: %w\", err)\n\t}\n\tdefer database.Close()\n\n\trows, err := database.Query(\"SELECT model FROM links\")\n\tif err != nil {\n\t\treturn fmt.Errorf(\"querying database: %w\", err)\n\t}\n\tdefer rows.Close()\n\n\tfor rows.Next() {\n\t\tvar model string\n\t\tif err = rows.Scan(\u0026model); err != nil {\n\t\t\treturn fmt.Errorf(\"scanning row: %w\", err)\n\t\t}\n\n\t\tnewRow := table.AddRow()\n\t\tnewRow.Model.Label = model\n\t}\n\n\tif err = rows.Err(); err != nil {\n\t\treturn fmt.Errorf(\"iterating over rows: %w\", err)\n\t}\n\n\treturn nil\n}\n"
},
"Attrs": {
"bypass": false,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"show": true
},
"ShowCodeChat": true
},
{
"Pos": {
"X": 4.7583647,
"Y": 2.094273
},
"Name": "table",
"Exe": "copy",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"changed": true,
"defRow": {
"button": {
"clicked": false,
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 0,
"label": "b",
"show": true,
"tooltip": ""
},
"model": {
"align_h": 0,
"align_v": 1,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"label": "a",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
}
},
"direction": 0,
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 2,
"max_height": 1,
"max_width": 100,
"show": true,
"show_border": true
},
"Cols": [
{
"Pos": 0,
"Min": 1,
"Max": 100,
"Resize": 1
},
{
"Pos": 1,
"Min": 1,
"Max": 4,
"Resize": 1
}
],
"Rows": [
{
"Pos": 0,
"Min": 1,
"Max": 2,
"Resize": 1
}
],
"Subs": [
{
"Pos": {
"X": 3.4327545,
"Y": 1.7596526
},
"Name": "model",
"Exe": "text",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"align_h": 0,
"align_v": 1,
"changed": false,
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"label": "a",
"multi_line": false,
"selection": true,
"show": true,
"show_border": false
},
"ShowCodeChat": false
},
{
"Pos": {
"X": 3.3721585,
"Y": 3.6231236
},
"Name": "button",
"Exe": "button",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"clicked": false,
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 0,
"label": "b",
"show": true,
"tooltip": ""
},
"ShowCodeChat": false
}
],
"ShowCodeChat": false
},
{
"Pos": {
"X": -3.931788,
"Y": 8.633098
},
"Name": "net",
"Exe": "net",
"Selected": true,
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"file_path": "",
"grid_h": 1,
"grid_w": 1,
"grid_x": 0,
"grid_y": 0,
"node": "",
"show": true,
"url": "https://huggingface.co/ggerganov/whisper.cpp/resolve/main/"
},
"ShowCodeChat": false
},
{
"Pos": {
"X": -4.0572715,
"Y": 5.6081095
},
"Name": "dir",
"Exe": "disk_dir",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"enable": true,
"grid_h": 1,
"grid_w": 1,
"grid_x": 1,
"grid_y": 5,
"path": "services/whisper.cpp/models/",
"show": true,
"write": true
},
"ShowCodeChat": false
},
{
"Pos": {
"X": -4.1570835,
"Y": -3.2529316
},
"Name": "db",
"Exe": "tables",
"Code": {
"Triggers": null,
"Messages": null,
"Code": ""
},
"Attrs": {
"enable": true,
"grid_h": 6,
"grid_w": 12,
"grid_x": 0,
"grid_y": 11,
"init_sql": "CREATE TABLE IF NOT EXISTS links (url TEXT);\nCREATE TABLE IF NOT EXISTS abc (firstColumn TEXT);\n",
"path": "apps/download_whisper_models/db.sqlite",
"selected_table": "links",
"show": false,
"show_path": true,
"show_table_list": true,
"write": false
},
"ShowCodeChat": false
}
],
"ShowCodeChat": false
}